stages:
  - build
  - test
  - image

variables:
  PUBLIC_REGISTRY_HOST: docker.io
  PUBLIC_REGISTRY_OWNER: uyohanan
  PUBLIC_REGISTRY_APP_NAME: module39

build_app:
  stage: build
  image: golang:1.15
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./${PUBLIC_REGISTRY_APP_NAME} ./

test:
  stage: test
  image: golang:1.15
  script:
    - go test

lint:
  stage: test
  image: golang:1.15
  script:
    - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
    - golangci-lint --version
    - golangci-lint run
  allow_failure: true

build_image:stable:
  stage: image
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u uyohanan -p ${PUBLIC_REGISTRY_PASSWORD} docker.io
    - docker build -t ${PUBLIC_REGISTRY_HOST}/${PUBLIC_REGISTRY_OWNER}/${PUBLIC_REGISTRY_APP_NAME}:${CI_COMMIT_REF_NAME} ./
    - docker push ${PUBLIC_REGISTRY_HOST}/${PUBLIC_REGISTRY_OWNER}/${PUBLIC_REGISTRY_APP_NAME}:${CI_COMMIT_REF_NAME}
  only:
    - master

build_image:latest:
  stage: image
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u uyohanan -p ${PUBLIC_REGISTRY_PASSWORD} docker.io
    - docker build -t ${PUBLIC_REGISTRY_HOST}/${PUBLIC_REGISTRY_OWNER}/${PUBLIC_REGISTRY_APP_NAME}:latest ./
    - docker push ${PUBLIC_REGISTRY_HOST}/${PUBLIC_REGISTRY_OWNER}/${PUBLIC_REGISTRY_APP_NAME}:latest
  when: manual
